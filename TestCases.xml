<?xml version="1.0" encoding="utf-8"?>
<WopiValidation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="TestCases.xsd">
  <Resources>
    <!-- Contains files that can be used by test cases -->
    <File Id="WordBlankDocument" Name="WordBlankDocument.docx" FilePath="Resources\WordBlankDocument.docx" />
    <File Id="WordSimpleDocument" Name="WordSimpleDocument.docx" FilePath="Resources\WordSimpleDocument.docx" />
    <File Id="WordComplexDocument" Name="WordComplexDocument.docx" FilePath="Resources\WordComplexDocument.docx" />
    <File Id="WordZeroByteDocument" Name="WordZeroBytesDocument.docx" FilePath="Resources\WordZeroBytesDocument.docx" />
    <File Id="ExcelBlankWorkbook" Name="ExcelBlankWorkbook.xlsx" FilePath="Resources\ExcelBlankWorkbook.xlsx" />
    <File Id="ZeroByteFile" Name="ZeroByteFile.wopitest" FilePath="Resources\ZeroByteFile.wopitest" />
    <!--Empty byte file for Zip Chunking-->
    <File Id="ZeroByteOfficeDocument" Name="" FilePath="" />
    <!--Non zero byte Excel files for Zip Chunking-->
    <File Id="NonZeroByteExcel_Main_V1" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteExcel.Version1.MainContent." />
    <File Id="NonZeroByteExcel_Alt_V1" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteExcel.Version1.AltContent." />
    <File Id="NonZeroByteExcel_Main_V2" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteExcel.Version2.MainContent." />
    <File Id="NonZeroByteExcel_Alt_V2" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteExcel.Version2.AltContent." />
    <File Id="NonZeroByteExcel_Main_V3" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteExcel.Version3.MainContent." />
    <File Id="NonZeroByteExcel_Alt_V3" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteExcel.Version3.AltContent." />
    <!--Non zero byte Ppt files for Zip Chunking-->
    <File Id="NonZeroBytePpt_Main_V1" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroBytePpt.Version1.MainContent." />
    <File Id="NonZeroBytePpt_Main_V2" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroBytePpt.Version2.MainContent." />
    <File Id="NonZeroBytePpt_Main_V3" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroBytePpt.Version3.MainContent." />
    <!--Non zero byte Word files for Zip Chunking-->
    <File Id="NonZeroByteWord_Main_V1" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteWord.Version1.MainContent." />
    <File Id="NonZeroByteWord_Main_V2" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteWord.Version2.MainContent." />
    <File Id="NonZeroByteWord_Main_V3" Name="ChunkIds.txt" FilePath="Microsoft.Office.WopiValidator.Core.Resources.ZipChunking.NonZeroByteWord.Version3.MainContent." />
  </Resources>
  <PrereqCases>
    <TestCase Name="WopiValidatorPrereq" Category="WopiCore">
      <Description>
        The prereq WOPI validation that must pass prior to running the (potentially destructive) test suite.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <StringProperty Name="BaseFileName" EndsWith=".wopitest" IsRequired="true" IgnoreCase="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="UserCanWritePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the user has permission to perform Write operation.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="UserCanWrite" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="UserCanNotWriteRelativePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the user is denied permission to call PutRelativeFile.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="UserCanNotWriteRelative" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="UserCanWriteRelativePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the user has permission to call PutRelativeFile.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="UserCanNotWriteRelative" ExpectedValue="false" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ContainersPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for Containers operations.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsContainers" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ContainersUnsupportedPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check that the host does NOT support Containers operations.
        This can be used in cases where a test group should be skipped if the host DOES support Containers
        operations.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsContainers" ExpectedValue="false" IsRequired="false" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="EcosystemPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for Ecosystem operations.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsEcosystem" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="LocksPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for Lock/Unlock/RefreshLock/UnlockAndRefreshLock
        operations.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsLocks" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="FileEditingPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if host declares support for PutFile/PutRelativeFile operations.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsUpdate" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="GetLockPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if host declares support for GetLock operation.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsGetLock" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ExtendedLockLengthPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if host declares support for extended lock lengths.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsExtendedLockLength" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="BusinessFlowPrereq" Category="WopiCore">
      <Description>
        The prereq BusinessFlowPrereq must pass prior to running the feature validations related to business flows.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="LicenseCheckForEditIsEnabled" IsRequired="true" ExpectedValue="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="DeleteFilePrereq" Category="WopiCore">
      <Description>
        The host must support /files/DeleteFile.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsDeleteFile" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="FileUrlUsagePrereq" Category="WopiCore">
      <Description>
        The host uses FileUrl for direct file access.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <AbsoluteUrlProperty Name="FileUrl" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="SupportedShareUrlTypesForFilePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host sets SupportedShareUrlTypes in CheckFileInfo to any value.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <ArrayProperty Name="SupportedShareUrlTypes" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ShareUrlTypeReadOnlyForFilePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for the "ReadOnly" Share Url type for the file.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <ArrayProperty Name="SupportedShareUrlTypes" ContainsValue="ReadOnly" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ShareUrlTypeReadWriteForFilePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for the "ReadWrite" Share Url type for the file.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <ArrayProperty Name="SupportedShareUrlTypes" ContainsValue="ReadWrite" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="SupportedShareUrlTypesForContainerPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host sets SupportedShareUrlTypes in CheckContainerInfo to any value.
      </Description>
      <Requests>
        <EnumerateAncestors>
          <SaveState>
            <!-- Save the Url property of the last child of AncestorsWithRootFirst -->
            <State Name="ParentContainerUrl" Source="AncestorsWithRootFirst[-1:].Url" />
          </SaveState>
        </EnumerateAncestors>
        <CheckContainerInfo OverrideUrl="$State:ParentContainerUrl">
          <Validators>
            <JsonResponseContentValidator>
              <ArrayProperty Name="SupportedShareUrlTypes" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckContainerInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ShareUrlTypeReadOnlyForContainerPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for the "ReadOnly" Share Url type for the container.
      </Description>
      <Requests>
        <EnumerateAncestors>
          <SaveState>
            <!-- Save the Url property of the last child of AncestorsWithRootFirst -->
            <State Name="ParentContainerUrl" Source="AncestorsWithRootFirst[-1:].Url" />
          </SaveState>
        </EnumerateAncestors>
        <CheckContainerInfo OverrideUrl="$State:ParentContainerUrl">
          <Validators>
            <JsonResponseContentValidator>
              <ArrayProperty Name="SupportedShareUrlTypes" ContainsValue="ReadOnly" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckContainerInfo>
      </Requests>
    </TestCase>

    <TestCase Name="ShareUrlTypeReadWriteForContainerPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the host declares support for the "ReadWrite" Share Url type for the container.
      </Description>
      <Requests>
        <EnumerateAncestors>
          <SaveState>
            <!-- Save the Url property of the last child of AncestorsWithRootFirst -->
            <State Name="ParentContainerUrl" Source="AncestorsWithRootFirst[-1:].Url" />
          </SaveState>
        </EnumerateAncestors>
        <CheckContainerInfo OverrideUrl="$State:ParentContainerUrl">
          <Validators>
            <JsonResponseContentValidator>
              <ArrayProperty Name="SupportedShareUrlTypes" ContainsValue="ReadWrite" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckContainerInfo>
      </Requests>
    </TestCase>

    <TestCase Name="RenameFilePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if host declares support for RenameFile operation.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsRename" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="UserCanCreateChildFilePrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the user has permission to call CreateChildFile operation.
      </Description>
      <Requests>
        <EnumerateAncestors>
          <SaveState>
            <!-- Get the Url property of the last child of AncestorsWithRootFirst -->
            <State Name="ParentContainerUrl" Source="AncestorsWithRootFirst[-1:].Url" />
          </SaveState>
        </EnumerateAncestors>
        <CheckContainerInfo OverrideUrl="$State:ParentContainerUrl">
          <Validators>
            <JsonResponseContentValidator>
              <BooleanProperty Name="UserCanCreateChildFile" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckContainerInfo>
      </Requests>
    </TestCase>

    <TestCase Name="AddActivitiesPrereq" Category="WopiCore">
      <Description>
        The host must support /files/AddActivities.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsAddActivities" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="UserCanRenameContainerPrereq" Category="WopiCore">
      <Description>
        Prereq WOPI Validation test to check if the user has permissions to call RenameContainer.
      </Description>
      <Requests>
        <EnumerateAncestors>
          <SaveState>
            <State Name="ParentContainerUrl" Source="AncestorsWithRootFirst[-1:].Url" />
          </SaveState>
        </EnumerateAncestors>
        <CheckContainerInfo OverrideUrl="$State:ParentContainerUrl">
          <Validators>
            <JsonResponseContentValidator>
              <BooleanProperty Name="UserCanRename" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckContainerInfo>
      </Requests>
    </TestCase>

    <TestCase Name="SupportsUserInfoPrereq" Category="WopiCore">
      <Description>
        The host must support /files/PutUserInfo.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsUserInfo" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="SupportsCoauthPrereq" Category="WopiCoauth">
      <Description>
        The host must support coauth.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsCoauth" ExpectedValue="true" IsRequired="true" />
              <LongProperty Name="AccessTokenExpiry" IsRequired="true" />
              <AbsoluteUrlProperty Name="RealTimeChannelEndpointUrl" IsRequired="true" />
              <AbsoluteUrlProperty Name="OfficeCollaborationServiceEndpointUrl" IsRequired="true" />
              <IntegerProperty Name="SequenceNumber" IsRequired="true" />
              <LongProperty Name="ServerTime" IsRequired="true" />
              <BooleanProperty Name="SupportsLocks" ExpectedValue="true" IsRequired="true" />
              <BooleanProperty Name="SupportsUpdate" ExpectedValue="true" IsRequired="true" />
              <BooleanProperty Name="SupportsUserInfo" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
            <Or>
              <JsonResponseContentValidator>
                <StringProperty Name="SharingStatus" ExpectedValue="Private" IsRequired="true" />
              </JsonResponseContentValidator>
              <JsonResponseContentValidator>
                <StringProperty Name="SharingStatus" ExpectedValue="Shared" IsRequired="true" />
              </JsonResponseContentValidator>
            </Or>
          </Validators>
        </CheckFileInfo>
      </Requests>
    </TestCase>

    <TestCase Name="SupportsChunkedFileTransferPrereq" Category="WopiCoauth">
      <Description>
        The host must support Incremental File Transfer protocol.
      </Description>
      <Requests>
        <CheckFileInfo>
          <Validators>
            <JsonSchemaValidator Schema="CheckFileInfoSchema" />
          </Validators>
          <!--TODO: Uncomment the validators once all APIs are implemented-->
          <!--<Validators>
            <JsonResponseContentValidator>
              <BooleanProperty Name="SupportsChunkedFileTransfer" ExpectedValue="true" IsRequired="true" />
            </JsonResponseContentValidator>
          </Validators>-->
        </CheckFileInfo>
      </Requests>
    </TestCase>
  </PrereqCases>

  <TestGroup Name="CheckFileInfoSchema">
    <PrereqTests>
      <PrereqTest>WopiValidatorPrereq</PrereqTest>
    </PrereqTests>
    <TestCases>
      <TestCase Name="FullCheckFileInfoSchema" Category="WopiCore">
        <Description>
          This tests that hosts' CheckFileInfo responses conform to the JSON schema.
        </Description>
        <Requests>
          <CheckFileInfo>
            <Validators>
              <JsonSchemaValidator Schema="CheckFileInfoSchema" />
              <JsonResponseContentValidator>
                <!-- BaseFileName should *not* start with a "."; it should be a full file name. -->
                <StringRegexProperty Name="BaseFileName" ExpectedValue="^\..*$" IsRequired="false" ShouldMatch="false" />

                <!-- FileExtension, if provided, should start with a "."; using this as a shortcut to test for that. -->
                <StringProperty Name="FileExtension" ExpectedValue=".wopitest" IsRequired="false" />
              </JsonResponseContentValidator>
            </Validators>
          </CheckFileInfo>
        </Requests>
      </TestCase>
      <TestCase Name="HostUrls" Category="OfficeOnline">
        <Description>
          This tests that the Host* URLs provided by the host are not Office Online action URLs.
        </Description>
        <Requests>
          <CheckFileInfo>
            <Validators>
              <JsonSchemaValidator Schema="CheckFileInfoSchema" />
              <JsonResponseContentValidator>
                <StringRegexProperty Name="CloseUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="DownloadUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="FileSharingUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="FileUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="FileVersionUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="HostEditUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="HostEmbeddedViewUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="HostViewUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="SignInUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="SignoutUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
                <StringRegexProperty Name="WorkflowUrl" ExpectedValue="^https:\/\/.*?\.officeapps(-df)?\.live\.com.+" IsRequired="false" ShouldMatch="false" />
              </JsonResponseContentValidator>
            </Validators>
          </CheckFileInfo>
        </Requests>
      </TestCase>

      <!-- Access token related testcases -->
      <TestCase Name="CheckFileWithInvalidAccessToken" Category="WopiCore">
        <Description>
          Simulates a CheckFileInfo request with invalid access token and expects a 401 or 404 response.
        </Description>
        <Requests>
          <CheckFileInfo>
            <Mutators>
              <AccessToken Mutation="INVALID" />
            </Mutators>
            <Validators>
              <Or>
                <ResponseCodeValidator ExpectedCode="401" />
                <ResponseCodeValidator ExpectedCode="404" />
              </Or>
            </Validators>
          </CheckFileInfo>
        </Requests>
      </TestCase>
    </TestCases>
  </TestGroup>

  <TestGroup Name="BaseWopiViewing">
    <PrereqTests>
      <PrereqTest>WopiValidatorPrereq</PrereqTest>
    </PrereqTests>
    <!-- Full Viewer app sequences -->
    <TestCases>
      <TestCase Name="ViewOnlySupport" Category="WopiCore">
        <Description>
          Standard sequence of requests made by a WOPI client to render a document.
        </Description>
        <Requests>
          <CheckFileInfo>
            <Validators>
              <JsonSchemaValidator Schema="CheckFileInfoSchema" />
              <JsonResponseContentValidator>
                <StringProperty Name="BaseFileName" IsRequired="true" />
                <StringProperty Name="OwnerId" IsRequired="true" />
                <LongProperty Name="Size" IsRequired="true" />
                <StringProperty Name="Version" IsRequired="true" />

                <AbsoluteUrlProperty Name="BreadcrumbBrandUrl" />
                <AbsoluteUrlProperty Name="BreadcrumbDocUrl" />
                <AbsoluteUrlProperty Name="BreadcrumbFolderUrl" />
                <AbsoluteUrlProperty Name="DownloadUrl" />
                <AbsoluteUrlProperty Name="CloseUrl" />
                <AbsoluteUrlProperty Name="HostEditUrl" />
                <AbsoluteUrlProperty Name="HostViewUrl" />
              </JsonResponseContentValidator>
            </Validators>
          </CheckFileInfo>
          <GetFile />
        </Requests>
      </TestCase>

      <TestCase Name="GetUnlockedFile" Category="WopiCore">
        <Description>
          GetFile requests on a file that wasn't locked before - necessary for Viewing and Editing.
        </Description>
        <Requests>
          <GetFile />
        </Requests>
      </TestCase>
    </TestCases>
  </TestGroup>

  <TestGroup Name="Locks">
    <PrereqTests>
      <PrereqTest>WopiValidatorPrereq</PrereqTest>
      <PrereqTest>FileEditingPrereq</PrereqTest>
      <PrereqTest>LocksPrereq</PrereqTest>
    </PrereqTests>
    <TestCases>
      <!-- Lock length validation -->
      <TestCase Name="LockLengthValidation" Category="WopiCore">
        <Description>
          Tests that the WOPI host is capable of handling WOPI Lock IDs of 256 characters.
        </Description>
        <Requests>
          <Lock Lock="1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456" />
          <Unlock Lock="1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456" />
        </Requests>
      </TestCase>

      <!-- Lock format validation -->
      <TestCase Name="LockFormatValidation" Category="WopiCore">
        <Description>
          Tests that Office locks, which happen to be JSON-formatted strings today, are handled properly by the host.
        </Description>
        <Requests>
          <Lock Lock="{&quot;S&quot;:&quot;0136ad16-9725-43c3-9ea0-5e01d2dbc162&quot;,&quot;E&quot;:2,&quot;M&quot;:&quot;DE997C5AC4E6&quot;,&quot;P&quot;:&quot;6058AF1E-A36F-4691-9003-B8E2C7F50937&quot;}" />
          <Unlock Lock="{&quot;S&quot;:&quot;0136ad16-9725-43c3-9ea0-5e01d2dbc162&quot;,&quot;E&quot;:2,&quot;M&quot;:&quot;DE997C5AC4E6&quot;,&quot;P&quot;:&quot;6058AF1E-A36F-4691-9003-B8E2C7F50937&quot;}" />
        </Requests>
      </TestCase>

      <!-- Lock requests -->
      <TestCase Name="SuccessfulLockSequence" Category="WopiCore">
        <Description>
          Simulates a successful sequence of lock-related requests: Lock, RefreshLock, UnlockAndRelock, Unlock.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <RefreshLock Lock="LockString" />
          <UnlockAndRelock NewLock="NewLockString" OldLock="LockString" />
          <Unlock Lock="NewLockString" />
        </Requests>
      </TestCase>

      <TestCase Name="LockMismatchAfterUnlockAndRelockRequest" Category="WopiCore">
        <Description>
          Simulates a successful UnlockAndRelock followed by Unlock with old lock. This tests that UnlockAndRelock actually changes the lock string
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <UnlockAndRelock OldLock="LockString" NewLock="NewLockString" />
          <Unlock Lock="LockString">
            <Validators>
              <LockMismatchValidator ExpectedLock="NewLockString" />
            </Validators>
          </Unlock>
          <Unlock Lock="NewLockString" />
        </Requests>
      </TestCase>

      <TestCase Name="DoubleLockSequence" Category="WopiCore">
        <Description>
          Two Lock calls in a row with the same Lock ID should work.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <Lock Lock="LockString" />
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>

      <TestCase Name="UnlockUnlockedFile" Category="WopiCore">
        <Description>
          Responses to Unlock requests on an unlocked file should include the X-WOPI-Lock header set to the empty string.
        </Description>
        <Requests>
          <Unlock Lock="LockString">
            <Validators>
              <LockMismatchValidator ExpectedLock="" />
            </Validators>
          </Unlock>
        </Requests>
      </TestCase>

      <!-- LockMismatch -->
      <TestCase Name="LockMismatchOnLockRequest" Category="WopiCore">
        <Description>
          Simulates a lock mismatch when trying to refresh the lock.
          Validates that the current lock ID is returned as response header.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <Lock Lock="IncorrectLockString">
            <Validators>
              <LockMismatchValidator ExpectedLock="LockString" />
            </Validators>
          </Lock>
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>

      <TestCase Name="LockMismatchOnUnlockRequest" Category="WopiCore">
        <Description>
          Simulates a lock mismatch when trying to unlock the file.
          Validates that the current lock ID is returned as response header.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <Unlock Lock="IncorrectLockString">
            <Validators>
              <LockMismatchValidator ExpectedLock="LockString" />
            </Validators>
          </Unlock>
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>

      <TestCase Name="LockMismatchOnRefreshLockRequest" Category="WopiCore">
        <Description>
          Simulates a lock mismatch when trying to refresh the lock.
          Validates that the current lock ID is returned as response header.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <RefreshLock Lock="IncorrectLockString">
            <Validators>
              <LockMismatchValidator ExpectedLock="LockString" />
            </Validators>
          </RefreshLock>
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>

      <TestCase Name="LockMismatchOnUnlockAndRelockRequest" Category="WopiCore">
        <Description>
          Simulates a lock mismatch when trying to unlock and relock the file.
          Validates that the current lock ID is returned as response header.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <UnlockAndRelock OldLock="IncorrectLockString" NewLock="NewLockString">
            <Validators>
              <LockMismatchValidator ExpectedLock="LockString" />
            </Validators>
          </UnlockAndRelock>
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>

      <TestCase Name="LockMismatchOnPutFileRequest" Category="WopiCore">
        <Description>
          Simulates a lock mismatch when trying to refresh the lock.
          Validates that the current lock ID is returned as response header.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <PutFile Lock="IncorrectLockString" ResourceId="WordBlankDocument">
            <Validators>
              <LockMismatchValidator ExpectedLock="LockString" />
            </Validators>
          </PutFile>
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>

      <!-- Invalid access token on Lock requests -->
      <TestCase Name="LockFileWithInvalidAccessToken" Category="WopiCore">
        <Description>
          Tests Lock operation with an invalid access token and expects a 401 or 404 response.
        </Description>
        <Requests>
          <Lock Lock="LockString">
            <Mutators>
              <AccessToken Mutation="INVALID" />
            </Mutators>
            <Validators>
              <Or>
                <ResponseCodeValidator ExpectedCode="401" />
                <ResponseCodeValidator ExpectedCode="404" />
              </Or>
            </Validators>
          </Lock>
        </Requests>
      </TestCase>

      <!-- Invalid access token on Unlock requests -->
      <TestCase Name="UnlockFileWithInvalidAccessToken" Category="WopiCore">
        <Description>
          Tests Unlock operation with an invalid access token and expects a 401 or 404 response.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <Unlock Lock="LockString">
            <Mutators>
              <AccessToken Mutation="INVALID" />
            </Mutators>
            <Validators>
              <Or>
                <ResponseCodeValidator ExpectedCode="401" />
                <ResponseCodeValidator ExpectedCode="404" />
              </Or>
            </Validators>
          </Unlock>
          <Unlock Lock="LockString" />
        </Requests>
      </TestCase>
    </TestCases>
  </TestGroup>

  <!-- Contains GetLock test cases -->
  <TestGroup Name="GetLock">
    <PrereqTests>
      <PrereqTest>WopiValidatorPrereq</PrereqTest>
      <PrereqTest>FileEditingPrereq</PrereqTest>
      <PrereqTest>LocksPrereq</PrereqTest>
      <PrereqTest>GetLockPrereq</PrereqTest>
    </PrereqTests>
    <TestCases>
      <!-- /files/GetLock -->
      <TestCase Name="files.GetLock" Category="WopiCore">
        <Description>
          Tests the standard GetLock flow; Lock, GetLock, then Unlock.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <GetLock>
            <Validators>
              <ResponseHeaderValidator Header="X-WOPI-Lock" ExpectedValue="LockString" IsRequired="true" ShouldMatch="true" />
            </Validators>
          </GetLock>
        </Requests>
        <CleanupRequests>
          <Unlock Lock="LockString" />
        </CleanupRequests>
      </TestCase>

      <TestCase Name="files.GetLockAfterChange" Category="WopiCore">
        <Description>
          Tests that the lock ID GetLock returns changes after it's changed by UnlockAndRelock.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <UnlockAndRelock NewLock="NewLockString" OldLock="LockString" />
          <GetLock>
            <Validators>
              <ResponseHeaderValidator Header="X-WOPI-Lock" ExpectedValue="NewLockString" IsRequired="true" ShouldMatch="true" />
            </Validators>
          </GetLock>
        </Requests>
        <CleanupRequests>
          <Unlock Lock="NewLockString" />
        </CleanupRequests>
      </TestCase>

      <TestCase Name="files.GetLockOnUnlockedFile" Category="WopiCore">
        <Description>
          Tests GetLock after a file has been locked and unlocked.
        </Description>
        <Requests>
          <Lock Lock="LockString" />
          <Unlock Lock="LockString" />
          <GetLock>
            <Validators>
              <ResponseHeaderValidator Header="X-WOPI-Lock" ExpectedValue="" ShouldMatch="true" />
            </Validators>
          </GetLock>
        </Requests>
      </TestCase>
    </TestCases>
  </TestGroup>

  <TestGroup Name="ExtendedLockLength">
    <PrereqTests>
      <PrereqTest>WopiValidatorPrereq</PrereqTest>
      <PrereqTest>FileEditingPrereq</PrereqTest>
      <PrereqTest>LocksPrereq</PrereqTest>
      <PrereqTest>GetLockPrereq</PrereqTest>
      <PrereqTest>ExtendedLockLengthPrereq</PrereqTest>
    </PrereqTests>
    <TestCases>
      <!-- /files/Lock: test new 1024 character lock length -->
      <TestCase Name="files.ExtendedLockLengthValidation" Category="WopiCore">
        <Description>
          Tests that the WOPI host is capable of handling WOPI Lock IDs of 1024 characters.
        </Description>
        <Requests>
          <CheckFileInfo>
            <Validators>
              <JsonSchemaValidator Schema="CheckFileInfoSchema" />
              <JsonResponseContentValidator>
                <BooleanProperty Name="SupportsExtendedLockLength" ExpectedValue="true" IsRequired="true" />
              </JsonResponseContentValidator>
            </Validators>
          </CheckFileInfo>
          <Lock Lock="12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234561234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678
